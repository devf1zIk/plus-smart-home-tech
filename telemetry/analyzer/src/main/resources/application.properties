
server.port=8081
analyzer.topics.snapshots=telemetry.snapshots.v1
analyzer.topics.hub-events=telemetry.hubs.v1

grpc.client.hub-router.address=static://localhost:59090
grpc.client.hub-router.enableKeepAlive=true
grpc.client.hub-router.keepAliveWithoutCalls=true
grpc.client.hub-router.negotiationType=plaintext

logging.level.root=INFO
logging.level.org.springframework.kafka=INFO
logging.level.ru.yandex.practicum=DEBUG


spring.application.name=analyzer

spring.datasource.url=jdbc:postgresql://localhost:5432/smarthome
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.continue-on-error=false
spring.sql.init.separator=;
spring.sql.init.encoding=UTF-8

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=analyzer-snapshots-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=ru.yandex.practicum.kafka.telemetry.deserialization.SensorsSnapshotDeserializer
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.max-poll-records=100

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=ru.yandex.practicum.kafka.telemetry.serialization.GeneralAvroSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.batch.size=16384
spring.kafka.producer.properties.buffer.memory=33554432
